{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/guard.PNG","assets/images/mintkeeper.jpg","assets/images/question.PNG","assets/images/player.PNG","assets/images/squidbanner.gif","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledImg","img","App","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","getData","useEffect","style","backgroundColor","fontSize","padding","display","flexDirection","textAlign","fontWeight","paddingRight","margin","borderStyle","borderColor","borderWidth","paddingLeft","href","alt","src","newbanner","paddingTop","color","maxWidth","borderRadius","paddingBottom","marginTop","marginBottom","background","maxHeight","Number","silver","height","width","gold","diamond","fontFamily","onClick","e","preventDefault","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","SmartContract","on","location","reload","id","placeholder","min","max","disabled","_amount","document","getElementById","value","mint","send","gasLimit","to","from","utils","toWei","toString","once","err","then","receipt","lineHeight","textDecoration","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.dd979b85.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        name: action.payload.name,\r\n        totalSupply: action.payload.totalSupply,\r\n        cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      let cost = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.cost()\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n          totalSupply,\r\n          cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/Doodlenauts.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 4) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0xf65EbF7AcD21fDa6e350EE11CF19da2e257BC01e\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Please install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-size: 12px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/guard.3b58198b.PNG\";","export default __webpack_public_path__ + \"static/media/mintkeeper.8110fbd5.jpg\";","export default __webpack_public_path__ + \"static/media/question.3495c12b.PNG\";","export default __webpack_public_path__ + \"static/media/player.0fbb4c7f.PNG\";","export default __webpack_public_path__ + \"static/media/squidbanner.7a22de0a.gif\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/mintkeeper.jpg\";\r\nimport silver from \"./assets/images/guard.PNG\";\r\nimport gold from \"./assets/images/question.PNG\";\r\nimport diamond from \"./assets/images/player.PNG\";\r\nimport newbanner from \"./assets/images/squidbanner.gif\"\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: solid;\r\n  background-color: black;\r\n  padding: 10px;\r\n  fontFamily: Staatliches, cursive;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  font-weight: bold;\r\n  font-size: 40px;\r\n  color: white;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px black;\r\n  -webkit-box-shadow: 0px 6px 0px -2px black;\r\n  -moz-box-shadow: 0px 6px 0px -2px black;\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n    color: #white;\r\n  }\r\n  :hover {\r\n    transition-duration: .4s;\r\n    color: #02F702;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 300px;\r\n  height: 44px;\r\n  @media (min-width: 767px) {\r\n    width: 600px;\r\n    height: 80px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const claimNFTs = (_amount) => {\r\n    _amount = document.getElementById(\"inputBox\").value;\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Minting your Official OJINGEO...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      // ********\r\n      // You can change the line above to\r\n      // .whiteListMint(blockchain.account, _amount) if you want only whitelisted\r\n      // users to be able to mint through your website!\r\n      // And after you're done with whitelisted users buying from your website,\r\n      // You can switch it back to .mint(blockchain.account, _amount).\r\n      // ********\r\n      .send({\r\n        gasLimit: 285000 * _amount,\r\n        to: \"0xf65EbF7AcD21fDa6e350EE11CF19da2e257BC01e\",\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((0.045 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong. Check your transaction on Etherscan to find out what happened!\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"CONGRATS! Your OJINGEO successfully minted! Good luck, you're officially in the game. \"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--black)\", fontSize: 40 }}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 24, backgroundColor: \"black\"}}>\r\n        <s.TextTitle\r\n          style={{ \r\n          display: \"flex\", \r\n          flexDirection: \"row\", \r\n          textAlign: \"left\", \r\n          fontSize: 40, \r\n          fontWeight: \"bold\", \r\n          paddingRight: 10, \r\n          margin: 0, \r\n          \r\n          borderStyle: \"solid\", \r\n          borderColor: \"white\", \r\n          borderWidth: 0,\r\n          paddingLeft: 30,\r\n          paddingRight: 30,\r\n          paddingTop: 30,\r\n          \r\n          borderRadius: 20, \r\n          textAlign: \"center\", \r\n          justifySelf: \"center\", \r\n          justifyContent: \"center\", \r\n          color:\"#7C3AED\", \r\n          background: \"black\",\r\n          }}\r\n        >\r\n          {/* Squid Game */}\r\n          <a href=\"https://google.com\"><StyledImg alt={\"Squid Game Logo\"} \r\n          src={newbanner} \r\n          style={{textAlign: \"center\"}}></StyledImg></a>\r\n        </s.TextTitle>\r\n        <s.SpacerMedium />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24, paddingTop: 0 }}>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"} style={{paddingTop: 0, flexDirection: \"column\"}}>\r\n          <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"center\", \r\n              maxWidth: 600,\r\n              fontSize: 25, \r\n              fontWeight: \"bold\", \r\n              borderStyle: \"solid\", \r\n              borderColor: \"black\",}}>\r\n                 Squidverse is a collection of 10,000 Unique <bold style={{color: \"#ED1B76\"}}>guards</bold> / <bold style={{color: \"#249F9C\"}}> players </bold> who live on the Ethereum Blockchain. Risk Your\r\n                 lives and come play for the grand prize weekly. <br/>Who will be victorious....<br/>\r\n                 <text style={{fontSize: 40}}>the <bold style={{color: \"#ED1B76\"}}>guards</bold> or the\r\n                 <bold style={{color: \"#249F9C\"}}> players</bold>?</text> \r\n              </s.TextTitle>\r\n            {/* <a href=\"https://skulljunkiesnft.com/\"><StyledImg alt={\"Mintkeeper\"} src={i1} style={{paddingTop: 0, borderStyle: \"solid\", borderColor: \"black\", borderWidth: 0,\r\n                    borderRadius: 0 }}/></a> */}\r\n            <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 40, fontWeight: \"bold\", borderStyle: \"solid\", borderColor: \"white\", \r\n              borderWidth: 5,\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n              borderRadius: 10,\r\n              paddingTop: 5,\r\n              paddingBottom: 5,\r\n              marginTop: 5,\r\n              marginBottom: 20,\r\n              background: \"black\",\r\n              color: \"white\",\r\n              }}\r\n            > Counter:<br/>\r\n              {blockchain.account == null ? \"   ?????\" : (\"   \" + data.totalSupply)}/10000\r\n            </s.TextTitle>\r\n            <s.Container\r\n            flex={1}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{ \r\n              backgroundColor: \"black\", \r\n              padding: 24,\r\n              paddingTop: 20,\r\n              borderStyle: \"solid\", \r\n              borderColor: \"white\", \r\n              borderWidth: 0,\r\n              borderRadius: 20,\r\n              fontSize: 40,\r\n              maxWidth: 700,\r\n              maxHeight: 1500 }}\r\n          >\r\n            {Number(data.totalSupply) == 10000 ? (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                {/* <s.SpacerSmall /> */}\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Dont worry, you're not missing out! You can still get OJINGEO on{\" \"}\r\n                  <a\r\n                    // target={\"_blank\"}\r\n                    href={\"https://testnets.opensea.io/collection/rinkeby-doodlenauts\"}\r\n                  >\r\n                    Opensea.io\r\n                  </a>\r\n                </s.TextDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* <s.TextTitle style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  1 DOODL costs .01 ETH.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall /> */}\r\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 40, color: \"white\" }}>\r\n                  {feedback}\r\n                </s.TextDescription>\r\n                {/* <s.SpacerMedium /> */}\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription style={{ \r\n                      textAlign: \"center\", \r\n                      fontSize: 25, \r\n                      marginBottom: 0,\r\n                      color: \"white\",\r\n                      maxWidth: 600 }}>\r\n                    Each <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold> \r\n                    is a cute generative piece of artwork with a mix of ~x \r\n                    different traits. Your <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> players</bold> will be staked and used to play various\r\n                    squid games for weekly prize giveaways. the first game is about to be revealed,\r\n                    will you play the squid game?\r\n                    <s.SpacerSmall/>\r\n                    <s.SpacerSmall/>\r\n                      <div style={{flex: \"display\"}}>\r\n                        <StyledImg alt={\"silver\"} src={silver} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n                        <StyledImg alt={\"silver\"} src={silver} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n                        <StyledImg alt={\"gold\"} src={gold} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n                        <StyledImg alt={\"diamond\"} src={diamond} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n                        <StyledImg alt={\"diamond\"} src={diamond} \r\n                        style={{\r\n                          paddingTop: 0, \r\n                          borderStyle: \"solid\", \r\n                          borderColor: \"black\", \r\n                          borderWidth: 3,\r\n                          borderRadius: 0,\r\n                          height: 100,\r\n                          width: 100,\r\n                          margin: \"2px\"\r\n                           }}/>\r\n\r\n                    </div>\r\n                    {/* <div style={{display: \"flex\", flexDirection: \"column\",\r\n                        borderStyle: \"solid\", \r\n                          borderColor: \"#D5B300\", \r\n                          borderWidth: 5,\r\n                          borderRadius: 10,\r\n                          backgroundColor: \"black\" }}>\r\n                      <bold style={{color: \"#C0C0C0\"}}>Silver:  5 / 10,000</bold> <br/>\r\n                      <bold style={{color: \"#D5B300\"}}>Gold:  3 / 10,000</bold> <br/>\r\n                      <bold style={{color: \"#B9F2FF\"}}>Diamond:  1 / 10,000</bold></div> */}\r\n                    </s.TextDescription>\r\n                    {/* <s.SpacerSmall /> */}\r\n                    {/* <s.TextDescription style={{ textAlign: \"center\", fontSize: 30, marginBottom: 0 }}>\r\n                      Connect to the Skulljunkies Minter!\r\n                    </s.TextDescription> */}\r\n                    {/* <s.SpacerSmall /> */}\r\n                    <StyledButton\r\n                      style={{\r\n                        fontFamily:\"'Staatliches', cursive;\",\r\n                        // background: \"black\",\r\n                        // color: \"white\",\r\n                        // borderStyle: \"solid\", \r\n                        // borderColor: \"#7C3AED\", \r\n                        borderWidth: 10,\r\n                        borderRadius: 90,\r\n                        fontSize: 60,\r\n                        marginTop: 30\r\n\r\n                      }}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    <s.SpacerLarge />\r\n                    {/* <s.TextDescription style={{textAlign: \"center\", fontSize: 30, marginBottom: 0, paddingBottom: 0}}>\r\n                      <a href=\"https://google.com\">Boo Crew NFT Smart Contract</a>\r\n                    </s.TextDescription> */}\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription style={{ textAlign: \"center\", fontSize: 50}}>\r\n                          <bold style={{color: \"white\"}}>{blockchain.errorMsg}</bold>\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"} style={{\r\n                    marginTop: 0, \r\n                    paddingTop: 0,\r\n                    color: \"white\"}}>\r\n                    <form>\r\n                    {/* I want  */}\r\n                    <input \r\n                    id=\"inputBox\"\r\n                    placeholder=\"#\" \r\n                    type=\"number\" \r\n                    min=\"1\" \r\n                    max=\"15\"\r\n                    style={{\r\n                      fontFamily: \"'Staatliches', cursive\",\r\n                      fontSize: 30,\r\n                      textAlign: \"center\",\r\n                      backgroundColor: \"black\",\r\n                      color: \"white\",\r\n                      borderWidth: 4,\r\n                      borderColor: \"white\",\r\n                      borderStyle: \"solid\",\r\n                      borderRadius: 100,\r\n                      paddingRight: 10,\r\n                      // marginBottom: 20,\r\n                      // paddingLeft: 0,\r\n                      // marginLeft: 0,\r\n                      width: 100,\r\n                      }}\r\n                    /> \r\n                    {/* Skulljunkies! */}\r\n                    </form>\r\n                    <s.SpacerSmall/>\r\n                    <StyledButton\r\n                     style={{fontFamily: \"'Staatliches', cursive;\", fontSize: 50}}\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(1);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : \"MINT\"}\r\n                    </StyledButton>\r\n                  </s.Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </s.Container>\r\n          <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>ROAD</bold> <bold style={{color: \"#249F9C\"}}>MAP </bold> \r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                   <text style={{fontSize: 50, color: \"#249F9C\"}}>25%</text> - You are in debt, how will you pay your bills?\r\n                   A mysterious man hands you a card with a phone number. Will you call it?\r\n                   <text style={{fontSize: 35, color: \"#249F9C\"}}> 10 lucky holders will receive a player airdrop.</text>\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"#ED1B76\"}}>50%</text> - The guards have been preparing for your arrival. You have no idea\r\n                   what they have in store for you. \r\n                   <text style={{fontSize: 35, color: \"#ED1B76\"}}> 10 lucky holders recieve a guard airdrop.</text>\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"#02FF02\"}}>100%</text> - The squid game begins! Which side are you on? The first\r\n                   game will be revealed. Pick your side and stake either your player or guard.\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>The winning team takes home the grand prize of 5% of the royalty revenue\r\n                   split amongst 5 players/guards randomly.</text>\r\n                 </text>\r\n              </s.TextTitle>\r\n              <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              marginTop: 50,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>ROAD</bold> <bold style={{color: \"#249F9C\"}}>MAP </bold> <bold style={{color: \"#ED1B76\", fontSize: 40}}>Cont.</bold>\r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                 <text style={{fontSize: 35, color: \"#02FF02\"}}>Rarity Tools</text> - We will list the guards/players on rarity tools.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Community Funds</text> - We will deposit 5% of weekly royalty \r\n                   revenue into a community wallet to be disbursed to the winners of the games.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Additional Games</text> - After the first game has concluded,\r\n                   will you continue playing and risking your life? There will be a total of 6 games. Pay your debts.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 35, color: \"#02FF02\"}}>Raffles/Airdrops</text> - Have a chance of getting free airdrops and participate in our raffles. You owe so much money.\r\n                 </text>\r\n              </s.TextTitle>\r\n              <s.TextTitle\r\n              style={{ \r\n              color: \"white\",\r\n              textAlign: \"left\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"white\",\r\n              borderWidth: 5,\r\n              borderRadius: 20,\r\n              marginTop: 50,\r\n              maxWidth: 600,\r\n              fontSize: 70, \r\n              paddingLeft: 30,\r\n              paddingRight: 30,\r\n              paddingTop: 30,\r\n              lineHeight: .6,\r\n              paddingBottom: 30\r\n              }}>\r\n                 <bold style={{color: \"#ED1B76\"}}>F</bold>.<bold style={{color: \"#249F9C\"}}>A</bold>.<bold style={{color: \"#ED1B76\"}}>Q</bold>.\r\n                 <br/><br/>\r\n                 <text style={{fontSize: 35}}>\r\n                   We won't tell you all of the rules. That'll ruin the fun. But here are some directions\r\n                   to get you to the squid games.\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How can I get a <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How can I purchase a <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How many <bold style={{color: \"#ED1B76\"}}>guards</bold> /<bold style={{color: \"#249F9C\"}}> players </bold> can I purchase?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     When will my <bold style={{color: \"#ED1B76\"}}>guard</bold> /<bold style={{color: \"#249F9C\"}}> player </bold> be revealed?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   <text style={{fontSize: 50, color: \"white\"}}>\r\n                     How do I know if I will get a <bold style={{color: \"#ED1B76\"}}>guard</bold> or a <bold style={{color: \"#249F9C\"}}> player </bold>?</text>\r\n                   <br/>\r\n                   lorem ipsum\r\n                   <br/><br/>\r\n                   \r\n                   \r\n                 </text>\r\n              </s.TextTitle>\r\n          </s.Container>\r\n          {/* <s.SpacerMedium /> */}\r\n          \r\n        </ResponsiveWrapper>\r\n        <s.SpacerSmall />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 40}}>\r\n                      <a \r\n                      href=\"https://rinkeby.etherscan.io/address/0xf65EbF7AcD21fDa6e350EE11CF19da2e257BC01e\"\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"white\",\r\n                        fontSize: 20,\r\n                      }}\r\n                      >SquidverseNFT Smart Contract</a>\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          {/* <s.TextDescription style={{ textAlign: \"center\", fontSize: 10, color: \"white\" }}>\r\n            asdf\r\n          </s.TextDescription> */}\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/theme.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}