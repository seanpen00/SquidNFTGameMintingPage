[{"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\index.js":"1","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\App.js":"2","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\reportWebVitals.js":"3","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\store.js":"4","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\styles\\globalStyles.js":"5","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\data\\dataActions.js":"6","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\blockchain\\blockchainActions.js":"7","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\blockchain\\blockchainReducer.js":"8","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\data\\dataReducer.js":"9","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\index.js":"10","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\App.js":"11","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\reportWebVitals.js":"12","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\store.js":"13","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\styles\\globalStyles.js":"14","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\data\\dataActions.js":"15","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\blockchain\\blockchainActions.js":"16","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\blockchain\\blockchainReducer.js":"17","C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\data\\dataReducer.js":"18","E:\\SquidNFTGameMintingPage\\src\\index.js":"19","E:\\SquidNFTGameMintingPage\\src\\App.js":"20","E:\\SquidNFTGameMintingPage\\src\\reportWebVitals.js":"21","E:\\SquidNFTGameMintingPage\\src\\redux\\store.js":"22","E:\\SquidNFTGameMintingPage\\src\\styles\\globalStyles.js":"23","E:\\SquidNFTGameMintingPage\\src\\redux\\blockchain\\blockchainActions.js":"24","E:\\SquidNFTGameMintingPage\\src\\redux\\data\\dataActions.js":"25","E:\\SquidNFTGameMintingPage\\src\\redux\\blockchain\\blockchainReducer.js":"26","E:\\SquidNFTGameMintingPage\\src\\redux\\data\\dataReducer.js":"27"},{"size":629,"mtime":1632079558855,"results":"28","hashOfConfig":"29"},{"size":8537,"mtime":1632080320919,"results":"30","hashOfConfig":"29"},{"size":375,"mtime":1632079558871,"results":"31","hashOfConfig":"29"},{"size":579,"mtime":1632079558871,"results":"32","hashOfConfig":"29"},{"size":1870,"mtime":1631847793324,"results":"33","hashOfConfig":"29"},{"size":1124,"mtime":1632079558871,"results":"34","hashOfConfig":"29"},{"size":2396,"mtime":1632080224560,"results":"35","hashOfConfig":"29"},{"size":893,"mtime":1632079558871,"results":"36","hashOfConfig":"29"},{"size":867,"mtime":1632079558871,"results":"37","hashOfConfig":"29"},{"size":629,"mtime":1632079558855,"results":"38","hashOfConfig":"39"},{"size":14643,"mtime":1633754061240,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1632079558871,"results":"41","hashOfConfig":"39"},{"size":579,"mtime":1632079558871,"results":"42","hashOfConfig":"39"},{"size":1870,"mtime":1631847793324,"results":"43","hashOfConfig":"39"},{"size":1124,"mtime":1633472606164,"results":"44","hashOfConfig":"39"},{"size":2396,"mtime":1633747821337,"results":"45","hashOfConfig":"39"},{"size":893,"mtime":1632079558871,"results":"46","hashOfConfig":"39"},{"size":867,"mtime":1632079558871,"results":"47","hashOfConfig":"39"},{"size":629,"mtime":1632079558855,"results":"48","hashOfConfig":"49"},{"size":15030,"mtime":1634437352397,"results":"50","hashOfConfig":"49"},{"size":375,"mtime":1632079558871,"results":"51","hashOfConfig":"49"},{"size":579,"mtime":1632079558871,"results":"52","hashOfConfig":"49"},{"size":1870,"mtime":1631847793324,"results":"53","hashOfConfig":"49"},{"size":2396,"mtime":1633747821337,"results":"54","hashOfConfig":"49"},{"size":1124,"mtime":1633472606164,"results":"55","hashOfConfig":"49"},{"size":893,"mtime":1632079558871,"results":"56","hashOfConfig":"49"},{"size":867,"mtime":1632079558871,"results":"57","hashOfConfig":"49"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j9avcz",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mzg6ru",{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10rzqak",{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\index.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\App.js",["114","115","116"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/1.gif\";\r\nimport newbanner from \"./assets/images/newbanner.png\"\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: #ffffff;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: #000000;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 350px;\r\n    height: 350px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n\r\n  const claimNFTs = (_amount) => {\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Launching your Doodlenaut into the Ether (minting Doodlenaut)...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      .send({\r\n        gasLimit: \"285000\",\r\n        to: \"0xAC065b23521297a6C94B482db6f574Ac7e8E4E31\",\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((.01 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"CONGRATS! Your Doodlenaut is officially in the Ether! go visit opensea.io to view it.\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--black)\" }}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 24 }}>\r\n        <s.TextTitle\r\n          style={{ textAlign: \"center\", fontSize: 28, fontWeight: \"bold\", padding: 0, margin: 0, \r\n          borderStyle: \"solid\", borderColor: \"black\", borderWidth: 0,\r\n          borderRadius: 50  }}\r\n        >\r\n          {/* Doodlenaut Minter! */}\r\n          <StyledImg alt={\"example\"} \r\n          src={newbanner} \r\n          style={{width: 486/2, height: 207/2}}/>\r\n        </s.TextTitle>\r\n        <s.SpacerMedium />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24, paddingTop: 0 }}>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"} style={{paddingTop: 0}}>\r\n            <StyledImg alt={\"example\"} src={i1} style={{paddingTop: 0, borderStyle: \"solid\", borderColor: \"black\", borderWidth: 5,\r\n                    borderRadius: 20 }}/>\r\n            <s.SpacerMedium />\r\n            <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 35, fontWeight: \"bold\", borderStyle: \"solid\", borderColor: \"black\", \r\n              borderWidth: 5,\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n              borderRadius: 50  }}\r\n            >\r\n              {data.totalSupply}/1000\r\n            </s.TextTitle>\r\n          </s.Container>\r\n          <s.SpacerMedium />\r\n          <s.Container\r\n            flex={1}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{ backgroundColor: \"#c2c2c2\", padding: 24, borderStyle: \"solid\", borderColor: \"black\", borderWidth: 5,\r\n                    borderRadius: 30 }}\r\n          >\r\n            {Number(data.totalSupply) == 1000 ? (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.SpacerSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Dont worry, you're not missing out! You can still Doodlenauts on{\" \"}\r\n                  <a\r\n                    // target={\"_blank\"}\r\n                    href={\"https://testnets.opensea.io/collection/rinkeby-doodlenauts\"}\r\n                  >\r\n                    Opensea.io\r\n                  </a>\r\n                </s.TextDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  1 DOODL costs .01 ETH.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  {feedback}\r\n                </s.TextDescription>\r\n                <s.SpacerMedium />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                      Connect to the Ethereum network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    <s.SpacerLarge />\r\n                    <s.TextDescription style={{textAlign: \"center\"}}>\r\n                      <a href=\"https://doodlenauts.io\">Doodlenauts Main Page</a>\r\n                    </s.TextDescription>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                    <StyledButton\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(1);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : \"BUY 1\"}\r\n                    </StyledButton>\r\n                  </s.Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerSmall />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\r\n            Please make sure you are connected to the right network (Ethereum\r\n            Mainnet) and the correct address. Please note: Once you make the\r\n            purchase, you cannot undo this action.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\r\n            We have set the gas limit to 285000 for the contract to successfully\r\n            mint your NFT. We recommend that you don't change the gas limit.\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\reportWebVitals.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\store.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\styles\\globalStyles.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\data\\dataActions.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\blockchain\\blockchainActions.js",["117"],"// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/Doodlenauts.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 4) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0xAC065b23521297a6C94B482db6f574Ac7e8E4E31\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Please install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\blockchain\\blockchainReducer.js",[],"C:\\Users\\Sean.000\\_2doodleminter\\example_nft_minter\\src\\redux\\data\\dataReducer.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\index.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\App.js",["118","119","120","121","122","123"],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\reportWebVitals.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\store.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\styles\\globalStyles.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\data\\dataActions.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\blockchain\\blockchainActions.js",["124"],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\blockchain\\blockchainReducer.js",[],"C:\\Users\\Sean.000\\Desktop\\_NFT_Storage\\example_nft_minter\\src\\redux\\data\\dataReducer.js",[],"E:\\SquidNFTGameMintingPage\\src\\index.js",[],"E:\\SquidNFTGameMintingPage\\src\\App.js",["125","126","127","128","129","130"],"E:\\SquidNFTGameMintingPage\\src\\reportWebVitals.js",[],"E:\\SquidNFTGameMintingPage\\src\\redux\\store.js",[],"E:\\SquidNFTGameMintingPage\\src\\styles\\globalStyles.js",[],"E:\\SquidNFTGameMintingPage\\src\\redux\\blockchain\\blockchainActions.js",["131"],"E:\\SquidNFTGameMintingPage\\src\\redux\\data\\dataActions.js",[],"E:\\SquidNFTGameMintingPage\\src\\redux\\blockchain\\blockchainReducer.js",[],"E:\\SquidNFTGameMintingPage\\src\\redux\\data\\dataReducer.js",[],{"ruleId":"132","severity":1,"message":"133","line":1,"column":38,"nodeType":"134","messageId":"135","endLine":1,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":96,"column":6,"nodeType":"138","endLine":96,"endColumn":26,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":135,"column":39,"nodeType":"142","messageId":"143","endLine":135,"endColumn":41},{"ruleId":"140","severity":1,"message":"141","line":51,"column":23,"nodeType":"142","messageId":"143","endLine":51,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":1,"column":38,"nodeType":"134","messageId":"135","endLine":1,"endColumn":44},{"ruleId":"132","severity":1,"message":"144","line":11,"column":8,"nodeType":"134","messageId":"135","endLine":11,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":113,"column":6,"nodeType":"138","endLine":113,"endColumn":26,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":132,"column":11,"nodeType":"148","messageId":"143","endLine":132,"endColumn":23},{"ruleId":"146","severity":1,"message":"149","line":135,"column":11,"nodeType":"148","messageId":"143","endLine":135,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":189,"column":39,"nodeType":"142","messageId":"143","endLine":189,"endColumn":41},{"ruleId":"140","severity":1,"message":"141","line":51,"column":23,"nodeType":"142","messageId":"143","endLine":51,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":1,"column":38,"nodeType":"134","messageId":"135","endLine":1,"endColumn":44},{"ruleId":"132","severity":1,"message":"150","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":10},{"ruleId":"136","severity":1,"message":"137","line":113,"column":6,"nodeType":"138","endLine":113,"endColumn":26,"suggestions":"151"},{"ruleId":"146","severity":1,"message":"147","line":132,"column":11,"nodeType":"148","messageId":"143","endLine":132,"endColumn":23},{"ruleId":"146","severity":1,"message":"149","line":136,"column":11,"nodeType":"148","messageId":"143","endLine":136,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":195,"column":39,"nodeType":"142","messageId":"143","endLine":195,"endColumn":41},{"ruleId":"140","severity":1,"message":"141","line":51,"column":23,"nodeType":"142","messageId":"143","endLine":51,"endColumn":25},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["152"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newbanner' is defined but never used.",["153"],"no-dupe-keys","Duplicate key 'paddingRight'.","ObjectExpression","Duplicate key 'textAlign'.","'i1' is defined but never used.",["154"],{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"155","fix":"158"},"Update the dependencies array to be: [blockchain.account, getData]",{"range":"159","text":"160"},{"range":"161","text":"160"},{"range":"162","text":"160"},[2856,2876],"[blockchain.account, getData]",[3586,3606],[3591,3611]]